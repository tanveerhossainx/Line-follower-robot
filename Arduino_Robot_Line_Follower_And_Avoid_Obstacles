//Line Follower And Obstacle Avoid Arduino Robot

// NewPing Library Link: https://github.com/eliteio/Arduino_New_Ping

#include<NewPing.h>



int RIGHT = A0; // RIGHT sensor connected to analog pin A0
int LEFT = A1;  // LEFT sensor connected to analog pin A1

//Enable_A and Enable_B Enable_Able jumpers on the L-298N H-bridge

int Enable_A = 12;  // Enable_A connected to digital pin 12
int Enable_B = 11;  // Enable_B connected to digital pin 11
int MOTOR_A1 = 7;   // MOTOR_A1 connected to digital pin 7
int MOTOR_A2 = 8;   // MOTOR_A2 connected to digital pin 8
int MOTOR_B1 = 9;   // MOTOR_B1 connected to digital pin 9
int MOTOR_B2 = 10;  // MOTOR_B2 connected to digital pin 10

#define TRIGGER_PIN A2   // TRIGGER PIN connected to analog pin A2
#define ECHO_PIN A3      // ECHO PIN connected to analog pin A3
#define MAX_DISTANCE 100 // Define Maximum Distance

//https://playground.arduino.cc/Code/NewPing/ referece for NewPing librery 
// MAX_DISTANCE = Maximam distance in cm 
NewPing sonar(TRIGGER_PIN, ECHO_PIN, MAX_DISTANCE); 

void setup() {
 //Setup code here, to run once:
Serial.begin(9600);
pinMode(Enable_A, OUTPUT); // Enable_A pin 12 as an output
pinMode(Enable_B, OUTPUT); // Enable_B pin 11 as an output
pinMode(MOTOR_A1, OUTPUT); // MOTOR_A1 pin 7 as an output
pinMode(MOTOR_A2, OUTPUT); // MOTOR_A2 pin 8 as an output
pinMode(MOTOR_B1, OUTPUT); // MOTOR_B1 pin 9 as an output
pinMode(MOTOR_B2, OUTPUT); // MOTOR_B2 pin 10 as an output
pinMode(RIGHT, INPUT);     // RIGHT pin A0 as an input
pinMode(LEFT, INPUT);      // LEFT pin A1 as an input


}

void loop() {
  // put your main code here, to run repeatedly:
  Serial.print(" Right sensor ");
  Serial.print(analogRead(RIGHT));
  Serial.print(" Left sensor ");
  Serial.println(analogRead(LEFT));

  Serial.print("Distance: ");
  Serial.print(sonar.ping_cm());
  Serial.print("cm");

delay(70);
int distance = sonar.ping_cm();
if (distance == 0) {
  distance = 30;
}
if(distance <=15) {
  Stop();
  back(); back();
  delay(100); turn_Right();
  delay(350); move_Forward();
  delay(500); turn_Left();
  delay(350); move_Forward();
  delay(700); turn_Left();
  delay(300); move_Forward();
  delay(400); turn_Right();
  delay(400);
// Serial.print(" distance   ");
// Serial.print(distance);
 
}

//Serial.print(" distance   ");
//Serial.print(distance);

//forword
if (analogRead(RIGHT)>=35 && analogRead(LEFT)>=35) {
  analogWrite(Enable_A, 100);
  analogWrite(Enable_B, 100);
  digitalWrite(MOTOR_A1, LOW); // sets the digital pin 7 (MOTOR_A1) off
  digitalWrite(MOTOR_A2, HIGH);// sets the digital pin 8 (MOTOR_A2) ON
  digitalWrite(MOTOR_B1, HIGH);// sets the digital pin 9 (MOTOR_A1) ON
  digitalWrite(MOTOR_B2, LOW); // sets the digital pin 10 (MOTOR_B2) off

  Serial.print(" going Forward  ");
  
}else if (analogRead(RIGHT)<=35 && !analogRead(LEFT)<=35 ) {
  analogWrite(Enable_A, 100);
  analogWrite(Enable_B, 100);
  digitalWrite(MOTOR_A1, HIGH); // sets the digital pin 7 (MOTOR_A1) ON
  digitalWrite(MOTOR_A2, LOW); // sets the digital pin 8 (MOTOR_A2) off
  digitalWrite(MOTOR_B1, HIGH);// sets the digital pin 9 (MOTOR_A1) ON
  digitalWrite(MOTOR_B2, LOW); // sets the digital pin 10 (MOTOR_B2) off

  Serial.print(" going right ");

}else if (!analogRead(RIGHT)<=35 && analogRead(LEFT)<=35) {
  analogWrite(Enable_A, 100);// Enable_A connected to digital pin 12
  analogWrite(Enable_B, 100);
  digitalWrite(MOTOR_A1, LOW); // sets the digital pin 7 (MOTOR_A1) off
  digitalWrite(MOTOR_A2, HIGH);// sets the digital pin 8 (MOTOR_A2) ON
  digitalWrite(MOTOR_B1, LOW); // sets the digital pin 9 (MOTOR_B1) off
  digitalWrite(MOTOR_B2, HIGH);// sets the digital pin 10 (MOTOR_B1) ON

  Serial.print(" going to left ");
  
}
else if (analogRead(RIGHT)<=35 && analogRead(LEFT)<=35) {
 
  Stop();

   Serial.print(" stop ");
}



}
void Stop() {
  analogWrite(Enable_A, 0); analogWrite(Enable_B, 0);
  digitalWrite(MOTOR_A1, LOW); // sets the digital pin 7 (MOTOR_A1) off
  digitalWrite(MOTOR_A2, LOW); // sets the digital pin 8 (MOTOR_A2) off
  digitalWrite(MOTOR_B1, LOW); // sets the digital pin 9 (MOTOR_B1) off
  digitalWrite(MOTOR_B2, LOW); // sets the digital pin 10 (MOTOR_B2) off 
}
void turn_Right() {
  analogWrite(Enable_A, 100); analogWrite(Enable_B, 100);
  digitalWrite(MOTOR_A1, LOW); // sets the digital pin 7 (MOTOR_A1) off 
  digitalWrite(MOTOR_A2, HIGH);// sets the digital pin 8 (MOTOR_A2) ON
  digitalWrite(MOTOR_B1, LOW); // sets the digital pin 9 (MOTOR_B1) off
  digitalWrite(MOTOR_B2, HIGH);// sets the digital pin 10 (MOTOR_B1) ON
  
}

void turn_Left() {
  analogWrite(Enable_A,100); analogWrite(Enable_B, 100);
  digitalWrite(MOTOR_A1, HIGH);// sets the digital pin 7 (MOTOR_A1) ON
  digitalWrite(MOTOR_A2, LOW); // sets the digital pin 8 (MOTOR_A2) off
  digitalWrite(MOTOR_B1, HIGH);// sets the digital pin 9 (MOTOR_A1) ON
  digitalWrite(MOTOR_B2, LOW); // sets the digital pin 10 (MOTOR_B2) off
}

void move_Forward() {
  analogWrite(Enable_A, 100); analogWrite(Enable_B, 100);
  digitalWrite(MOTOR_A1, LOW); // sets the digital pin 7 (MOTOR_A1) off 
  digitalWrite(MOTOR_A2, HIGH);// sets the digital pin 8 (MOTOR_A2) ON
  digitalWrite(MOTOR_B1, HIGH);// sets the digital pin 9 (MOTOR_A1) ON
  digitalWrite(MOTOR_B2, LOW); // sets the digital pin 10 (MOTOR_B2) off
}